//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandConsumingListenerComponent commandConsumingListener { get { return (CommandConsumingListenerComponent)GetComponent(CommandComponentsLookup.CommandConsumingListener); } }
    public bool hasCommandConsumingListener { get { return HasComponent(CommandComponentsLookup.CommandConsumingListener); } }

    public void AddCommandConsumingListener(System.Collections.Generic.List<ICommandConsumingListener> newValue) {
        var index = CommandComponentsLookup.CommandConsumingListener;
        var component = CreateComponent<CommandConsumingListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandConsumingListener(System.Collections.Generic.List<ICommandConsumingListener> newValue) {
        var index = CommandComponentsLookup.CommandConsumingListener;
        var component = CreateComponent<CommandConsumingListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandConsumingListener() {
        RemoveComponent(CommandComponentsLookup.CommandConsumingListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandConsumingListener;

    public static Entitas.IMatcher<CommandEntity> CommandConsumingListener {
        get {
            if (_matcherCommandConsumingListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandConsumingListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandConsumingListener = matcher;
            }

            return _matcherCommandConsumingListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandConsumingListener(ICommandConsumingListener value) {
        var listeners = hasCommandConsumingListener
            ? commandConsumingListener.value
            : new System.Collections.Generic.List<ICommandConsumingListener>();
        listeners.Add(value);
        ReplaceCommandConsumingListener(listeners);
    }

    public void RemoveCommandConsumingListener(ICommandConsumingListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandConsumingListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandConsumingListener();
        } else {
            ReplaceCommandConsumingListener(listeners);
        }
    }
}
