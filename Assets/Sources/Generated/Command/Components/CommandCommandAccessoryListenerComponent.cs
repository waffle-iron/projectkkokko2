//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandAccessoryListenerComponent commandAccessoryListener { get { return (CommandAccessoryListenerComponent)GetComponent(CommandComponentsLookup.CommandAccessoryListener); } }
    public bool hasCommandAccessoryListener { get { return HasComponent(CommandComponentsLookup.CommandAccessoryListener); } }

    public void AddCommandAccessoryListener(System.Collections.Generic.List<ICommandAccessoryListener> newValue) {
        var index = CommandComponentsLookup.CommandAccessoryListener;
        var component = CreateComponent<CommandAccessoryListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandAccessoryListener(System.Collections.Generic.List<ICommandAccessoryListener> newValue) {
        var index = CommandComponentsLookup.CommandAccessoryListener;
        var component = CreateComponent<CommandAccessoryListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandAccessoryListener() {
        RemoveComponent(CommandComponentsLookup.CommandAccessoryListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandAccessoryListener;

    public static Entitas.IMatcher<CommandEntity> CommandAccessoryListener {
        get {
            if (_matcherCommandAccessoryListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandAccessoryListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandAccessoryListener = matcher;
            }

            return _matcherCommandAccessoryListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandAccessoryListener(ICommandAccessoryListener value) {
        var listeners = hasCommandAccessoryListener
            ? commandAccessoryListener.value
            : new System.Collections.Generic.List<ICommandAccessoryListener>();
        listeners.Add(value);
        ReplaceCommandAccessoryListener(listeners);
    }

    public void RemoveCommandAccessoryListener(ICommandAccessoryListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandAccessoryListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandAccessoryListener();
        } else {
            ReplaceCommandAccessoryListener(listeners);
        }
    }
}
