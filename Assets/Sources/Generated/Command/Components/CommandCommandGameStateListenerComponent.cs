//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandGameStateListenerComponent commandGameStateListener { get { return (CommandGameStateListenerComponent)GetComponent(CommandComponentsLookup.CommandGameStateListener); } }
    public bool hasCommandGameStateListener { get { return HasComponent(CommandComponentsLookup.CommandGameStateListener); } }

    public void AddCommandGameStateListener(System.Collections.Generic.List<ICommandGameStateListener> newValue) {
        var index = CommandComponentsLookup.CommandGameStateListener;
        var component = CreateComponent<CommandGameStateListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandGameStateListener(System.Collections.Generic.List<ICommandGameStateListener> newValue) {
        var index = CommandComponentsLookup.CommandGameStateListener;
        var component = CreateComponent<CommandGameStateListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandGameStateListener() {
        RemoveComponent(CommandComponentsLookup.CommandGameStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandGameStateListener;

    public static Entitas.IMatcher<CommandEntity> CommandGameStateListener {
        get {
            if (_matcherCommandGameStateListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandGameStateListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandGameStateListener = matcher;
            }

            return _matcherCommandGameStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandGameStateListener(ICommandGameStateListener value) {
        var listeners = hasCommandGameStateListener
            ? commandGameStateListener.value
            : new System.Collections.Generic.List<ICommandGameStateListener>();
        listeners.Add(value);
        ReplaceCommandGameStateListener(listeners);
    }

    public void RemoveCommandGameStateListener(ICommandGameStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandGameStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandGameStateListener();
        } else {
            ReplaceCommandGameStateListener(listeners);
        }
    }
}
