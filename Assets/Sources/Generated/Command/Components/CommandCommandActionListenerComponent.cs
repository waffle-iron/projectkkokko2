//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandActionListenerComponent commandActionListener { get { return (CommandActionListenerComponent)GetComponent(CommandComponentsLookup.CommandActionListener); } }
    public bool hasCommandActionListener { get { return HasComponent(CommandComponentsLookup.CommandActionListener); } }

    public void AddCommandActionListener(System.Collections.Generic.List<ICommandActionListener> newValue) {
        var index = CommandComponentsLookup.CommandActionListener;
        var component = CreateComponent<CommandActionListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandActionListener(System.Collections.Generic.List<ICommandActionListener> newValue) {
        var index = CommandComponentsLookup.CommandActionListener;
        var component = CreateComponent<CommandActionListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandActionListener() {
        RemoveComponent(CommandComponentsLookup.CommandActionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandActionListener;

    public static Entitas.IMatcher<CommandEntity> CommandActionListener {
        get {
            if (_matcherCommandActionListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandActionListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandActionListener = matcher;
            }

            return _matcherCommandActionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandActionListener(ICommandActionListener value) {
        var listeners = hasCommandActionListener
            ? commandActionListener.value
            : new System.Collections.Generic.List<ICommandActionListener>();
        listeners.Add(value);
        ReplaceCommandActionListener(listeners);
    }

    public void RemoveCommandActionListener(ICommandActionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandActionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandActionListener();
        } else {
            ReplaceCommandActionListener(listeners);
        }
    }
}
