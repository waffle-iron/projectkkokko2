//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandLoadedViewsCompleteRemovedListenerComponent commandLoadedViewsCompleteRemovedListener { get { return (CommandLoadedViewsCompleteRemovedListenerComponent)GetComponent(CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener); } }
    public bool hasCommandLoadedViewsCompleteRemovedListener { get { return HasComponent(CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener); } }

    public void AddCommandLoadedViewsCompleteRemovedListener(System.Collections.Generic.List<ICommandLoadedViewsCompleteRemovedListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener;
        var component = CreateComponent<CommandLoadedViewsCompleteRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandLoadedViewsCompleteRemovedListener(System.Collections.Generic.List<ICommandLoadedViewsCompleteRemovedListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener;
        var component = CreateComponent<CommandLoadedViewsCompleteRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandLoadedViewsCompleteRemovedListener() {
        RemoveComponent(CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandLoadedViewsCompleteRemovedListener;

    public static Entitas.IMatcher<CommandEntity> CommandLoadedViewsCompleteRemovedListener {
        get {
            if (_matcherCommandLoadedViewsCompleteRemovedListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandLoadedViewsCompleteRemovedListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandLoadedViewsCompleteRemovedListener = matcher;
            }

            return _matcherCommandLoadedViewsCompleteRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandLoadedViewsCompleteRemovedListener(ICommandLoadedViewsCompleteRemovedListener value) {
        var listeners = hasCommandLoadedViewsCompleteRemovedListener
            ? commandLoadedViewsCompleteRemovedListener.value
            : new System.Collections.Generic.List<ICommandLoadedViewsCompleteRemovedListener>();
        listeners.Add(value);
        ReplaceCommandLoadedViewsCompleteRemovedListener(listeners);
    }

    public void RemoveCommandLoadedViewsCompleteRemovedListener(ICommandLoadedViewsCompleteRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandLoadedViewsCompleteRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandLoadedViewsCompleteRemovedListener();
        } else {
            ReplaceCommandLoadedViewsCompleteRemovedListener(listeners);
        }
    }
}
