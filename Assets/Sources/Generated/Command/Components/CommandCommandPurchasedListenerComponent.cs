//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandPurchasedListenerComponent commandPurchasedListener { get { return (CommandPurchasedListenerComponent)GetComponent(CommandComponentsLookup.CommandPurchasedListener); } }
    public bool hasCommandPurchasedListener { get { return HasComponent(CommandComponentsLookup.CommandPurchasedListener); } }

    public void AddCommandPurchasedListener(System.Collections.Generic.List<ICommandPurchasedListener> newValue) {
        var index = CommandComponentsLookup.CommandPurchasedListener;
        var component = CreateComponent<CommandPurchasedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandPurchasedListener(System.Collections.Generic.List<ICommandPurchasedListener> newValue) {
        var index = CommandComponentsLookup.CommandPurchasedListener;
        var component = CreateComponent<CommandPurchasedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandPurchasedListener() {
        RemoveComponent(CommandComponentsLookup.CommandPurchasedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandPurchasedListener;

    public static Entitas.IMatcher<CommandEntity> CommandPurchasedListener {
        get {
            if (_matcherCommandPurchasedListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandPurchasedListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandPurchasedListener = matcher;
            }

            return _matcherCommandPurchasedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandPurchasedListener(ICommandPurchasedListener value) {
        var listeners = hasCommandPurchasedListener
            ? commandPurchasedListener.value
            : new System.Collections.Generic.List<ICommandPurchasedListener>();
        listeners.Add(value);
        ReplaceCommandPurchasedListener(listeners);
    }

    public void RemoveCommandPurchasedListener(ICommandPurchasedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandPurchasedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandPurchasedListener();
        } else {
            ReplaceCommandPurchasedListener(listeners);
        }
    }
}
