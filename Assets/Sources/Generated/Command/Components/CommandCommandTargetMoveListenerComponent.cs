//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandTargetMoveListenerComponent commandTargetMoveListener { get { return (CommandTargetMoveListenerComponent)GetComponent(CommandComponentsLookup.CommandTargetMoveListener); } }
    public bool hasCommandTargetMoveListener { get { return HasComponent(CommandComponentsLookup.CommandTargetMoveListener); } }

    public void AddCommandTargetMoveListener(System.Collections.Generic.List<ICommandTargetMoveListener> newValue) {
        var index = CommandComponentsLookup.CommandTargetMoveListener;
        var component = CreateComponent<CommandTargetMoveListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandTargetMoveListener(System.Collections.Generic.List<ICommandTargetMoveListener> newValue) {
        var index = CommandComponentsLookup.CommandTargetMoveListener;
        var component = CreateComponent<CommandTargetMoveListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandTargetMoveListener() {
        RemoveComponent(CommandComponentsLookup.CommandTargetMoveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandTargetMoveListener;

    public static Entitas.IMatcher<CommandEntity> CommandTargetMoveListener {
        get {
            if (_matcherCommandTargetMoveListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandTargetMoveListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandTargetMoveListener = matcher;
            }

            return _matcherCommandTargetMoveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandTargetMoveListener(ICommandTargetMoveListener value) {
        var listeners = hasCommandTargetMoveListener
            ? commandTargetMoveListener.value
            : new System.Collections.Generic.List<ICommandTargetMoveListener>();
        listeners.Add(value);
        ReplaceCommandTargetMoveListener(listeners);
    }

    public void RemoveCommandTargetMoveListener(ICommandTargetMoveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandTargetMoveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandTargetMoveListener();
        } else {
            ReplaceCommandTargetMoveListener(listeners);
        }
    }
}
