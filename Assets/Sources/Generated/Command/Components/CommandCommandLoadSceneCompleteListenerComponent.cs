//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandLoadSceneCompleteListenerComponent commandLoadSceneCompleteListener { get { return (CommandLoadSceneCompleteListenerComponent)GetComponent(CommandComponentsLookup.CommandLoadSceneCompleteListener); } }
    public bool hasCommandLoadSceneCompleteListener { get { return HasComponent(CommandComponentsLookup.CommandLoadSceneCompleteListener); } }

    public void AddCommandLoadSceneCompleteListener(System.Collections.Generic.List<ICommandLoadSceneCompleteListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadSceneCompleteListener;
        var component = CreateComponent<CommandLoadSceneCompleteListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandLoadSceneCompleteListener(System.Collections.Generic.List<ICommandLoadSceneCompleteListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadSceneCompleteListener;
        var component = CreateComponent<CommandLoadSceneCompleteListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandLoadSceneCompleteListener() {
        RemoveComponent(CommandComponentsLookup.CommandLoadSceneCompleteListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandLoadSceneCompleteListener;

    public static Entitas.IMatcher<CommandEntity> CommandLoadSceneCompleteListener {
        get {
            if (_matcherCommandLoadSceneCompleteListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandLoadSceneCompleteListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandLoadSceneCompleteListener = matcher;
            }

            return _matcherCommandLoadSceneCompleteListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandLoadSceneCompleteListener(ICommandLoadSceneCompleteListener value) {
        var listeners = hasCommandLoadSceneCompleteListener
            ? commandLoadSceneCompleteListener.value
            : new System.Collections.Generic.List<ICommandLoadSceneCompleteListener>();
        listeners.Add(value);
        ReplaceCommandLoadSceneCompleteListener(listeners);
    }

    public void RemoveCommandLoadSceneCompleteListener(ICommandLoadSceneCompleteListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandLoadSceneCompleteListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandLoadSceneCompleteListener();
        } else {
            ReplaceCommandLoadSceneCompleteListener(listeners);
        }
    }
}
