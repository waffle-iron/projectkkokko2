//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandTouchDataListenerComponent commandTouchDataListener { get { return (CommandTouchDataListenerComponent)GetComponent(CommandComponentsLookup.CommandTouchDataListener); } }
    public bool hasCommandTouchDataListener { get { return HasComponent(CommandComponentsLookup.CommandTouchDataListener); } }

    public void AddCommandTouchDataListener(System.Collections.Generic.List<ICommandTouchDataListener> newValue) {
        var index = CommandComponentsLookup.CommandTouchDataListener;
        var component = CreateComponent<CommandTouchDataListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandTouchDataListener(System.Collections.Generic.List<ICommandTouchDataListener> newValue) {
        var index = CommandComponentsLookup.CommandTouchDataListener;
        var component = CreateComponent<CommandTouchDataListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandTouchDataListener() {
        RemoveComponent(CommandComponentsLookup.CommandTouchDataListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandTouchDataListener;

    public static Entitas.IMatcher<CommandEntity> CommandTouchDataListener {
        get {
            if (_matcherCommandTouchDataListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandTouchDataListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandTouchDataListener = matcher;
            }

            return _matcherCommandTouchDataListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandTouchDataListener(ICommandTouchDataListener value) {
        var listeners = hasCommandTouchDataListener
            ? commandTouchDataListener.value
            : new System.Collections.Generic.List<ICommandTouchDataListener>();
        listeners.Add(value);
        ReplaceCommandTouchDataListener(listeners);
    }

    public void RemoveCommandTouchDataListener(ICommandTouchDataListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandTouchDataListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandTouchDataListener();
        } else {
            ReplaceCommandTouchDataListener(listeners);
        }
    }
}
