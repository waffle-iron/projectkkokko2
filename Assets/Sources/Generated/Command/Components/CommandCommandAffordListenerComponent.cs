//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandAffordListenerComponent commandAffordListener { get { return (CommandAffordListenerComponent)GetComponent(CommandComponentsLookup.CommandAffordListener); } }
    public bool hasCommandAffordListener { get { return HasComponent(CommandComponentsLookup.CommandAffordListener); } }

    public void AddCommandAffordListener(System.Collections.Generic.List<ICommandAffordListener> newValue) {
        var index = CommandComponentsLookup.CommandAffordListener;
        var component = CreateComponent<CommandAffordListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandAffordListener(System.Collections.Generic.List<ICommandAffordListener> newValue) {
        var index = CommandComponentsLookup.CommandAffordListener;
        var component = CreateComponent<CommandAffordListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandAffordListener() {
        RemoveComponent(CommandComponentsLookup.CommandAffordListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandAffordListener;

    public static Entitas.IMatcher<CommandEntity> CommandAffordListener {
        get {
            if (_matcherCommandAffordListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandAffordListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandAffordListener = matcher;
            }

            return _matcherCommandAffordListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandAffordListener(ICommandAffordListener value) {
        var listeners = hasCommandAffordListener
            ? commandAffordListener.value
            : new System.Collections.Generic.List<ICommandAffordListener>();
        listeners.Add(value);
        ReplaceCommandAffordListener(listeners);
    }

    public void RemoveCommandAffordListener(ICommandAffordListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandAffordListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandAffordListener();
        } else {
            ReplaceCommandAffordListener(listeners);
        }
    }
}
