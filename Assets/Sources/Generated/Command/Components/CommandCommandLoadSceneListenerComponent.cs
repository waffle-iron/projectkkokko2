//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandLoadSceneListenerComponent commandLoadSceneListener { get { return (CommandLoadSceneListenerComponent)GetComponent(CommandComponentsLookup.CommandLoadSceneListener); } }
    public bool hasCommandLoadSceneListener { get { return HasComponent(CommandComponentsLookup.CommandLoadSceneListener); } }

    public void AddCommandLoadSceneListener(System.Collections.Generic.List<ICommandLoadSceneListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadSceneListener;
        var component = CreateComponent<CommandLoadSceneListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandLoadSceneListener(System.Collections.Generic.List<ICommandLoadSceneListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadSceneListener;
        var component = CreateComponent<CommandLoadSceneListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandLoadSceneListener() {
        RemoveComponent(CommandComponentsLookup.CommandLoadSceneListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandLoadSceneListener;

    public static Entitas.IMatcher<CommandEntity> CommandLoadSceneListener {
        get {
            if (_matcherCommandLoadSceneListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandLoadSceneListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandLoadSceneListener = matcher;
            }

            return _matcherCommandLoadSceneListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandLoadSceneListener(ICommandLoadSceneListener value) {
        var listeners = hasCommandLoadSceneListener
            ? commandLoadSceneListener.value
            : new System.Collections.Generic.List<ICommandLoadSceneListener>();
        listeners.Add(value);
        ReplaceCommandLoadSceneListener(listeners);
    }

    public void RemoveCommandLoadSceneListener(ICommandLoadSceneListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandLoadSceneListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandLoadSceneListener();
        } else {
            ReplaceCommandLoadSceneListener(listeners);
        }
    }
}
