//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandRemoveFromStorageListenerComponent commandRemoveFromStorageListener { get { return (CommandRemoveFromStorageListenerComponent)GetComponent(CommandComponentsLookup.CommandRemoveFromStorageListener); } }
    public bool hasCommandRemoveFromStorageListener { get { return HasComponent(CommandComponentsLookup.CommandRemoveFromStorageListener); } }

    public void AddCommandRemoveFromStorageListener(System.Collections.Generic.List<ICommandRemoveFromStorageListener> newValue) {
        var index = CommandComponentsLookup.CommandRemoveFromStorageListener;
        var component = CreateComponent<CommandRemoveFromStorageListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandRemoveFromStorageListener(System.Collections.Generic.List<ICommandRemoveFromStorageListener> newValue) {
        var index = CommandComponentsLookup.CommandRemoveFromStorageListener;
        var component = CreateComponent<CommandRemoveFromStorageListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandRemoveFromStorageListener() {
        RemoveComponent(CommandComponentsLookup.CommandRemoveFromStorageListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandRemoveFromStorageListener;

    public static Entitas.IMatcher<CommandEntity> CommandRemoveFromStorageListener {
        get {
            if (_matcherCommandRemoveFromStorageListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandRemoveFromStorageListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandRemoveFromStorageListener = matcher;
            }

            return _matcherCommandRemoveFromStorageListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandRemoveFromStorageListener(ICommandRemoveFromStorageListener value) {
        var listeners = hasCommandRemoveFromStorageListener
            ? commandRemoveFromStorageListener.value
            : new System.Collections.Generic.List<ICommandRemoveFromStorageListener>();
        listeners.Add(value);
        ReplaceCommandRemoveFromStorageListener(listeners);
    }

    public void RemoveCommandRemoveFromStorageListener(ICommandRemoveFromStorageListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandRemoveFromStorageListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandRemoveFromStorageListener();
        } else {
            ReplaceCommandRemoveFromStorageListener(listeners);
        }
    }
}
