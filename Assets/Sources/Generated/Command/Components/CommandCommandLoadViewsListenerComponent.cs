//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public CommandLoadViewsListenerComponent commandLoadViewsListener { get { return (CommandLoadViewsListenerComponent)GetComponent(CommandComponentsLookup.CommandLoadViewsListener); } }
    public bool hasCommandLoadViewsListener { get { return HasComponent(CommandComponentsLookup.CommandLoadViewsListener); } }

    public void AddCommandLoadViewsListener(System.Collections.Generic.List<ICommandLoadViewsListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadViewsListener;
        var component = CreateComponent<CommandLoadViewsListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCommandLoadViewsListener(System.Collections.Generic.List<ICommandLoadViewsListener> newValue) {
        var index = CommandComponentsLookup.CommandLoadViewsListener;
        var component = CreateComponent<CommandLoadViewsListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandLoadViewsListener() {
        RemoveComponent(CommandComponentsLookup.CommandLoadViewsListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CommandMatcher {

    static Entitas.IMatcher<CommandEntity> _matcherCommandLoadViewsListener;

    public static Entitas.IMatcher<CommandEntity> CommandLoadViewsListener {
        get {
            if (_matcherCommandLoadViewsListener == null) {
                var matcher = (Entitas.Matcher<CommandEntity>)Entitas.Matcher<CommandEntity>.AllOf(CommandComponentsLookup.CommandLoadViewsListener);
                matcher.componentNames = CommandComponentsLookup.componentNames;
                _matcherCommandLoadViewsListener = matcher;
            }

            return _matcherCommandLoadViewsListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CommandEntity {

    public void AddCommandLoadViewsListener(ICommandLoadViewsListener value) {
        var listeners = hasCommandLoadViewsListener
            ? commandLoadViewsListener.value
            : new System.Collections.Generic.List<ICommandLoadViewsListener>();
        listeners.Add(value);
        ReplaceCommandLoadViewsListener(listeners);
    }

    public void RemoveCommandLoadViewsListener(ICommandLoadViewsListener value, bool removeComponentWhenEmpty = true) {
        var listeners = commandLoadViewsListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCommandLoadViewsListener();
        } else {
            ReplaceCommandLoadViewsListener(listeners);
        }
    }
}
