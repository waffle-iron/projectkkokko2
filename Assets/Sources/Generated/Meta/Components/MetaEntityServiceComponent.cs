//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity entityServiceEntity { get { return GetGroup(MetaMatcher.EntityService).GetSingleEntity(); } }
    public EntityServiceComponent entityService { get { return entityServiceEntity.entityService; } }
    public bool hasEntityService { get { return entityServiceEntity != null; } }

    public MetaEntity SetEntityService(IEntityService newInstance) {
        if (hasEntityService) {
            throw new Entitas.EntitasException("Could not set EntityService!\n" + this + " already has an entity with EntityServiceComponent!",
                "You should check if the context already has a entityServiceEntity before setting it or use context.ReplaceEntityService().");
        }
        var entity = CreateEntity();
        entity.AddEntityService(newInstance);
        return entity;
    }

    public void ReplaceEntityService(IEntityService newInstance) {
        var entity = entityServiceEntity;
        if (entity == null) {
            entity = SetEntityService(newInstance);
        } else {
            entity.ReplaceEntityService(newInstance);
        }
    }

    public void RemoveEntityService() {
        entityServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public EntityServiceComponent entityService { get { return (EntityServiceComponent)GetComponent(MetaComponentsLookup.EntityService); } }
    public bool hasEntityService { get { return HasComponent(MetaComponentsLookup.EntityService); } }

    public void AddEntityService(IEntityService newInstance) {
        var index = MetaComponentsLookup.EntityService;
        var component = CreateComponent<EntityServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceEntityService(IEntityService newInstance) {
        var index = MetaComponentsLookup.EntityService;
        var component = CreateComponent<EntityServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveEntityService() {
        RemoveComponent(MetaComponentsLookup.EntityService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherEntityService;

    public static Entitas.IMatcher<MetaEntity> EntityService {
        get {
            if (_matcherEntityService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.EntityService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherEntityService = matcher;
            }

            return _matcherEntityService;
        }
    }
}
