//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity debugServiceEntity { get { return GetGroup(MetaMatcher.DebugService).GetSingleEntity(); } }
    public DebugServiceComponent debugService { get { return debugServiceEntity.debugService; } }
    public bool hasDebugService { get { return debugServiceEntity != null; } }

    public MetaEntity SetDebugService(IDebugService newInstance) {
        if (hasDebugService) {
            throw new Entitas.EntitasException("Could not set DebugService!\n" + this + " already has an entity with DebugServiceComponent!",
                "You should check if the context already has a debugServiceEntity before setting it or use context.ReplaceDebugService().");
        }
        var entity = CreateEntity();
        entity.AddDebugService(newInstance);
        return entity;
    }

    public void ReplaceDebugService(IDebugService newInstance) {
        var entity = debugServiceEntity;
        if (entity == null) {
            entity = SetDebugService(newInstance);
        } else {
            entity.ReplaceDebugService(newInstance);
        }
    }

    public void RemoveDebugService() {
        debugServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public DebugServiceComponent debugService { get { return (DebugServiceComponent)GetComponent(MetaComponentsLookup.DebugService); } }
    public bool hasDebugService { get { return HasComponent(MetaComponentsLookup.DebugService); } }

    public void AddDebugService(IDebugService newInstance) {
        var index = MetaComponentsLookup.DebugService;
        var component = CreateComponent<DebugServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceDebugService(IDebugService newInstance) {
        var index = MetaComponentsLookup.DebugService;
        var component = CreateComponent<DebugServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveDebugService() {
        RemoveComponent(MetaComponentsLookup.DebugService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherDebugService;

    public static Entitas.IMatcher<MetaEntity> DebugService {
        get {
            if (_matcherDebugService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.DebugService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherDebugService = matcher;
            }

            return _matcherDebugService;
        }
    }
}
