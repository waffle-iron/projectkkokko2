//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity notificationServiceEntity { get { return GetGroup(MetaMatcher.NotificationService).GetSingleEntity(); } }
    public NotificationServiceComponent notificationService { get { return notificationServiceEntity.notificationService; } }
    public bool hasNotificationService { get { return notificationServiceEntity != null; } }

    public MetaEntity SetNotificationService(INotificationService newInstance) {
        if (hasNotificationService) {
            throw new Entitas.EntitasException("Could not set NotificationService!\n" + this + " already has an entity with NotificationServiceComponent!",
                "You should check if the context already has a notificationServiceEntity before setting it or use context.ReplaceNotificationService().");
        }
        var entity = CreateEntity();
        entity.AddNotificationService(newInstance);
        return entity;
    }

    public void ReplaceNotificationService(INotificationService newInstance) {
        var entity = notificationServiceEntity;
        if (entity == null) {
            entity = SetNotificationService(newInstance);
        } else {
            entity.ReplaceNotificationService(newInstance);
        }
    }

    public void RemoveNotificationService() {
        notificationServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public NotificationServiceComponent notificationService { get { return (NotificationServiceComponent)GetComponent(MetaComponentsLookup.NotificationService); } }
    public bool hasNotificationService { get { return HasComponent(MetaComponentsLookup.NotificationService); } }

    public void AddNotificationService(INotificationService newInstance) {
        var index = MetaComponentsLookup.NotificationService;
        var component = CreateComponent<NotificationServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceNotificationService(INotificationService newInstance) {
        var index = MetaComponentsLookup.NotificationService;
        var component = CreateComponent<NotificationServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveNotificationService() {
        RemoveComponent(MetaComponentsLookup.NotificationService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherNotificationService;

    public static Entitas.IMatcher<MetaEntity> NotificationService {
        get {
            if (_matcherNotificationService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.NotificationService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherNotificationService = matcher;
            }

            return _matcherNotificationService;
        }
    }
}
