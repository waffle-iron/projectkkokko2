//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity touchServiceEntity { get { return GetGroup(MetaMatcher.TouchService).GetSingleEntity(); } }
    public TouchServiceComponent touchService { get { return touchServiceEntity.touchService; } }
    public bool hasTouchService { get { return touchServiceEntity != null; } }

    public MetaEntity SetTouchService(IInputTouchService newInstance) {
        if (hasTouchService) {
            throw new Entitas.EntitasException("Could not set TouchService!\n" + this + " already has an entity with TouchServiceComponent!",
                "You should check if the context already has a touchServiceEntity before setting it or use context.ReplaceTouchService().");
        }
        var entity = CreateEntity();
        entity.AddTouchService(newInstance);
        return entity;
    }

    public void ReplaceTouchService(IInputTouchService newInstance) {
        var entity = touchServiceEntity;
        if (entity == null) {
            entity = SetTouchService(newInstance);
        } else {
            entity.ReplaceTouchService(newInstance);
        }
    }

    public void RemoveTouchService() {
        touchServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public TouchServiceComponent touchService { get { return (TouchServiceComponent)GetComponent(MetaComponentsLookup.TouchService); } }
    public bool hasTouchService { get { return HasComponent(MetaComponentsLookup.TouchService); } }

    public void AddTouchService(IInputTouchService newInstance) {
        var index = MetaComponentsLookup.TouchService;
        var component = CreateComponent<TouchServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceTouchService(IInputTouchService newInstance) {
        var index = MetaComponentsLookup.TouchService;
        var component = CreateComponent<TouchServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveTouchService() {
        RemoveComponent(MetaComponentsLookup.TouchService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherTouchService;

    public static Entitas.IMatcher<MetaEntity> TouchService {
        get {
            if (_matcherTouchService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.TouchService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherTouchService = matcher;
            }

            return _matcherTouchService;
        }
    }
}
