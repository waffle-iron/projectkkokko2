//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public InputRemoveFromStorageRemovedListenerComponent inputRemoveFromStorageRemovedListener { get { return (InputRemoveFromStorageRemovedListenerComponent)GetComponent(InputComponentsLookup.InputRemoveFromStorageRemovedListener); } }
    public bool hasInputRemoveFromStorageRemovedListener { get { return HasComponent(InputComponentsLookup.InputRemoveFromStorageRemovedListener); } }

    public void AddInputRemoveFromStorageRemovedListener(System.Collections.Generic.List<IInputRemoveFromStorageRemovedListener> newValue) {
        var index = InputComponentsLookup.InputRemoveFromStorageRemovedListener;
        var component = CreateComponent<InputRemoveFromStorageRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInputRemoveFromStorageRemovedListener(System.Collections.Generic.List<IInputRemoveFromStorageRemovedListener> newValue) {
        var index = InputComponentsLookup.InputRemoveFromStorageRemovedListener;
        var component = CreateComponent<InputRemoveFromStorageRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInputRemoveFromStorageRemovedListener() {
        RemoveComponent(InputComponentsLookup.InputRemoveFromStorageRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputRemoveFromStorageRemovedListener;

    public static Entitas.IMatcher<InputEntity> InputRemoveFromStorageRemovedListener {
        get {
            if (_matcherInputRemoveFromStorageRemovedListener == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputRemoveFromStorageRemovedListener);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputRemoveFromStorageRemovedListener = matcher;
            }

            return _matcherInputRemoveFromStorageRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public void AddInputRemoveFromStorageRemovedListener(IInputRemoveFromStorageRemovedListener value) {
        var listeners = hasInputRemoveFromStorageRemovedListener
            ? inputRemoveFromStorageRemovedListener.value
            : new System.Collections.Generic.List<IInputRemoveFromStorageRemovedListener>();
        listeners.Add(value);
        ReplaceInputRemoveFromStorageRemovedListener(listeners);
    }

    public void RemoveInputRemoveFromStorageRemovedListener(IInputRemoveFromStorageRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = inputRemoveFromStorageRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveInputRemoveFromStorageRemovedListener();
        } else {
            ReplaceInputRemoveFromStorageRemovedListener(listeners);
        }
    }
}
