//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity pauseEntity { get { return GetGroup(InputMatcher.Pause).GetSingleEntity(); } }
    public PauseComponent pause { get { return pauseEntity.pause; } }
    public bool hasPause { get { return pauseEntity != null; } }

    public InputEntity SetPause(bool newState) {
        if (hasPause) {
            throw new Entitas.EntitasException("Could not set Pause!\n" + this + " already has an entity with PauseComponent!",
                "You should check if the context already has a pauseEntity before setting it or use context.ReplacePause().");
        }
        var entity = CreateEntity();
        entity.AddPause(newState);
        return entity;
    }

    public void ReplacePause(bool newState) {
        var entity = pauseEntity;
        if (entity == null) {
            entity = SetPause(newState);
        } else {
            entity.ReplacePause(newState);
        }
    }

    public void RemovePause() {
        pauseEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public PauseComponent pause { get { return (PauseComponent)GetComponent(InputComponentsLookup.Pause); } }
    public bool hasPause { get { return HasComponent(InputComponentsLookup.Pause); } }

    public void AddPause(bool newState) {
        var index = InputComponentsLookup.Pause;
        var component = CreateComponent<PauseComponent>(index);
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplacePause(bool newState) {
        var index = InputComponentsLookup.Pause;
        var component = CreateComponent<PauseComponent>(index);
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemovePause() {
        RemoveComponent(InputComponentsLookup.Pause);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiInterfaceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity : IPauseEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPause;

    public static Entitas.IMatcher<InputEntity> Pause {
        get {
            if (_matcherPause == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Pause);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPause = matcher;
            }

            return _matcherPause;
        }
    }
}
