//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameOnCollisionListenerComponent gameOnCollisionListener { get { return (GameOnCollisionListenerComponent)GetComponent(GameComponentsLookup.GameOnCollisionListener); } }
    public bool hasGameOnCollisionListener { get { return HasComponent(GameComponentsLookup.GameOnCollisionListener); } }

    public void AddGameOnCollisionListener(System.Collections.Generic.List<IGameOnCollisionListener> newValue) {
        var index = GameComponentsLookup.GameOnCollisionListener;
        var component = CreateComponent<GameOnCollisionListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameOnCollisionListener(System.Collections.Generic.List<IGameOnCollisionListener> newValue) {
        var index = GameComponentsLookup.GameOnCollisionListener;
        var component = CreateComponent<GameOnCollisionListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameOnCollisionListener() {
        RemoveComponent(GameComponentsLookup.GameOnCollisionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameOnCollisionListener;

    public static Entitas.IMatcher<GameEntity> GameOnCollisionListener {
        get {
            if (_matcherGameOnCollisionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameOnCollisionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameOnCollisionListener = matcher;
            }

            return _matcherGameOnCollisionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameOnCollisionListener(IGameOnCollisionListener value) {
        var listeners = hasGameOnCollisionListener
            ? gameOnCollisionListener.value
            : new System.Collections.Generic.List<IGameOnCollisionListener>();
        listeners.Add(value);
        ReplaceGameOnCollisionListener(listeners);
    }

    public void RemoveGameOnCollisionListener(IGameOnCollisionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameOnCollisionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameOnCollisionListener();
        } else {
            ReplaceGameOnCollisionListener(listeners);
        }
    }
}
