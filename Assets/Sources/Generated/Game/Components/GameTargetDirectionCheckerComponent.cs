//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetDirectionCheckerComponent targetDirectionChecker { get { return (TargetDirectionCheckerComponent)GetComponent(GameComponentsLookup.TargetDirectionChecker); } }
    public bool hasTargetDirectionChecker { get { return HasComponent(GameComponentsLookup.TargetDirectionChecker); } }

    public void AddTargetDirectionChecker(float newAngle) {
        var index = GameComponentsLookup.TargetDirectionChecker;
        var component = CreateComponent<TargetDirectionCheckerComponent>(index);
        component.angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceTargetDirectionChecker(float newAngle) {
        var index = GameComponentsLookup.TargetDirectionChecker;
        var component = CreateComponent<TargetDirectionCheckerComponent>(index);
        component.angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetDirectionChecker() {
        RemoveComponent(GameComponentsLookup.TargetDirectionChecker);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetDirectionChecker;

    public static Entitas.IMatcher<GameEntity> TargetDirectionChecker {
        get {
            if (_matcherTargetDirectionChecker == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetDirectionChecker);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetDirectionChecker = matcher;
            }

            return _matcherTargetDirectionChecker;
        }
    }
}
