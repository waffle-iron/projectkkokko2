//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SleepListenerComponent sleepListener { get { return (SleepListenerComponent)GetComponent(GameComponentsLookup.SleepListener); } }
    public bool hasSleepListener { get { return HasComponent(GameComponentsLookup.SleepListener); } }

    public void AddSleepListener(System.Collections.Generic.List<ISleepListener> newValue) {
        var index = GameComponentsLookup.SleepListener;
        var component = CreateComponent<SleepListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSleepListener(System.Collections.Generic.List<ISleepListener> newValue) {
        var index = GameComponentsLookup.SleepListener;
        var component = CreateComponent<SleepListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSleepListener() {
        RemoveComponent(GameComponentsLookup.SleepListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSleepListener;

    public static Entitas.IMatcher<GameEntity> SleepListener {
        get {
            if (_matcherSleepListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SleepListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSleepListener = matcher;
            }

            return _matcherSleepListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSleepListener(ISleepListener value) {
        var listeners = hasSleepListener
            ? sleepListener.value
            : new System.Collections.Generic.List<ISleepListener>();
        listeners.Add(value);
        ReplaceSleepListener(listeners);
    }

    public void RemoveSleepListener(ISleepListener value, bool removeComponentWhenEmpty = true) {
        var listeners = sleepListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSleepListener();
        } else {
            ReplaceSleepListener(listeners);
        }
    }
}
