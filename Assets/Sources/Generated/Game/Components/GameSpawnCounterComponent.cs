//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpawnCounterComponent spawnCounter { get { return (SpawnCounterComponent)GetComponent(GameComponentsLookup.SpawnCounter); } }
    public bool hasSpawnCounter { get { return HasComponent(GameComponentsLookup.SpawnCounter); } }

    public void AddSpawnCounter(uint newCurrent) {
        var index = GameComponentsLookup.SpawnCounter;
        var component = CreateComponent<SpawnCounterComponent>(index);
        component.current = newCurrent;
        AddComponent(index, component);
    }

    public void ReplaceSpawnCounter(uint newCurrent) {
        var index = GameComponentsLookup.SpawnCounter;
        var component = CreateComponent<SpawnCounterComponent>(index);
        component.current = newCurrent;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnCounter() {
        RemoveComponent(GameComponentsLookup.SpawnCounter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpawnCounter;

    public static Entitas.IMatcher<GameEntity> SpawnCounter {
        get {
            if (_matcherSpawnCounter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpawnCounter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpawnCounter = matcher;
            }

            return _matcherSpawnCounter;
        }
    }
}
