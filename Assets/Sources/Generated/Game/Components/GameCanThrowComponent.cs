//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CanThrowComponent canThrow { get { return (CanThrowComponent)GetComponent(GameComponentsLookup.CanThrow); } }
    public bool hasCanThrow { get { return HasComponent(GameComponentsLookup.CanThrow); } }

    public void AddCanThrow(float newForce, float newMinDistance) {
        var index = GameComponentsLookup.CanThrow;
        var component = CreateComponent<CanThrowComponent>(index);
        component.force = newForce;
        component.minDistance = newMinDistance;
        AddComponent(index, component);
    }

    public void ReplaceCanThrow(float newForce, float newMinDistance) {
        var index = GameComponentsLookup.CanThrow;
        var component = CreateComponent<CanThrowComponent>(index);
        component.force = newForce;
        component.minDistance = newMinDistance;
        ReplaceComponent(index, component);
    }

    public void RemoveCanThrow() {
        RemoveComponent(GameComponentsLookup.CanThrow);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCanThrow;

    public static Entitas.IMatcher<GameEntity> CanThrow {
        get {
            if (_matcherCanThrow == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CanThrow);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCanThrow = matcher;
            }

            return _matcherCanThrow;
        }
    }
}
