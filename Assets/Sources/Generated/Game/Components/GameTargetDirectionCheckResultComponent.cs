//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetDirectionCheckResultComponent targetDirectionCheckResult { get { return (TargetDirectionCheckResultComponent)GetComponent(GameComponentsLookup.TargetDirectionCheckResult); } }
    public bool hasTargetDirectionCheckResult { get { return HasComponent(GameComponentsLookup.TargetDirectionCheckResult); } }

    public void AddTargetDirectionCheckResult(bool newIsInFOV) {
        var index = GameComponentsLookup.TargetDirectionCheckResult;
        var component = CreateComponent<TargetDirectionCheckResultComponent>(index);
        component.isInFOV = newIsInFOV;
        AddComponent(index, component);
    }

    public void ReplaceTargetDirectionCheckResult(bool newIsInFOV) {
        var index = GameComponentsLookup.TargetDirectionCheckResult;
        var component = CreateComponent<TargetDirectionCheckResultComponent>(index);
        component.isInFOV = newIsInFOV;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetDirectionCheckResult() {
        RemoveComponent(GameComponentsLookup.TargetDirectionCheckResult);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetDirectionCheckResult;

    public static Entitas.IMatcher<GameEntity> TargetDirectionCheckResult {
        get {
            if (_matcherTargetDirectionCheckResult == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetDirectionCheckResult);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetDirectionCheckResult = matcher;
            }

            return _matcherTargetDirectionCheckResult;
        }
    }
}
