//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GridComponent grid { get { return (GridComponent)GetComponent(GameComponentsLookup.Grid); } }
    public bool hasGrid { get { return HasComponent(GameComponentsLookup.Grid); } }

    public void AddGrid(string newId) {
        var index = GameComponentsLookup.Grid;
        var component = CreateComponent<GridComponent>(index);
        component.id = newId;
        AddComponent(index, component);
    }

    public void ReplaceGrid(string newId) {
        var index = GameComponentsLookup.Grid;
        var component = CreateComponent<GridComponent>(index);
        component.id = newId;
        ReplaceComponent(index, component);
    }

    public void RemoveGrid() {
        RemoveComponent(GameComponentsLookup.Grid);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGrid;

    public static Entitas.IMatcher<GameEntity> Grid {
        get {
            if (_matcherGrid == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Grid);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGrid = matcher;
            }

            return _matcherGrid;
        }
    }
}
