//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WipeProgressComponent wipeProgress { get { return (WipeProgressComponent)GetComponent(GameComponentsLookup.WipeProgress); } }
    public bool hasWipeProgress { get { return HasComponent(GameComponentsLookup.WipeProgress); } }

    public void AddWipeProgress(float newProgress) {
        var index = GameComponentsLookup.WipeProgress;
        var component = CreateComponent<WipeProgressComponent>(index);
        component.progress = newProgress;
        AddComponent(index, component);
    }

    public void ReplaceWipeProgress(float newProgress) {
        var index = GameComponentsLookup.WipeProgress;
        var component = CreateComponent<WipeProgressComponent>(index);
        component.progress = newProgress;
        ReplaceComponent(index, component);
    }

    public void RemoveWipeProgress() {
        RemoveComponent(GameComponentsLookup.WipeProgress);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWipeProgress;

    public static Entitas.IMatcher<GameEntity> WipeProgress {
        get {
            if (_matcherWipeProgress == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WipeProgress);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWipeProgress = matcher;
            }

            return _matcherWipeProgress;
        }
    }
}
