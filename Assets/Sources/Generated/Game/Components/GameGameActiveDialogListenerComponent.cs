//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameActiveDialogListenerComponent gameActiveDialogListener { get { return (GameActiveDialogListenerComponent)GetComponent(GameComponentsLookup.GameActiveDialogListener); } }
    public bool hasGameActiveDialogListener { get { return HasComponent(GameComponentsLookup.GameActiveDialogListener); } }

    public void AddGameActiveDialogListener(System.Collections.Generic.List<IGameActiveDialogListener> newValue) {
        var index = GameComponentsLookup.GameActiveDialogListener;
        var component = CreateComponent<GameActiveDialogListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameActiveDialogListener(System.Collections.Generic.List<IGameActiveDialogListener> newValue) {
        var index = GameComponentsLookup.GameActiveDialogListener;
        var component = CreateComponent<GameActiveDialogListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameActiveDialogListener() {
        RemoveComponent(GameComponentsLookup.GameActiveDialogListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameActiveDialogListener;

    public static Entitas.IMatcher<GameEntity> GameActiveDialogListener {
        get {
            if (_matcherGameActiveDialogListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameActiveDialogListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameActiveDialogListener = matcher;
            }

            return _matcherGameActiveDialogListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameActiveDialogListener(IGameActiveDialogListener value) {
        var listeners = hasGameActiveDialogListener
            ? gameActiveDialogListener.value
            : new System.Collections.Generic.List<IGameActiveDialogListener>();
        listeners.Add(value);
        ReplaceGameActiveDialogListener(listeners);
    }

    public void RemoveGameActiveDialogListener(IGameActiveDialogListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameActiveDialogListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameActiveDialogListener();
        } else {
            ReplaceGameActiveDialogListener(listeners);
        }
    }
}
