//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AcceptableRangeComponent acceptableRange { get { return (AcceptableRangeComponent)GetComponent(GameComponentsLookup.AcceptableRange); } }
    public bool hasAcceptableRange { get { return HasComponent(GameComponentsLookup.AcceptableRange); } }

    public void AddAcceptableRange(UnityEngine.Vector2 newValues) {
        var index = GameComponentsLookup.AcceptableRange;
        var component = CreateComponent<AcceptableRangeComponent>(index);
        component.values = newValues;
        AddComponent(index, component);
    }

    public void ReplaceAcceptableRange(UnityEngine.Vector2 newValues) {
        var index = GameComponentsLookup.AcceptableRange;
        var component = CreateComponent<AcceptableRangeComponent>(index);
        component.values = newValues;
        ReplaceComponent(index, component);
    }

    public void RemoveAcceptableRange() {
        RemoveComponent(GameComponentsLookup.AcceptableRange);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAcceptableRange;

    public static Entitas.IMatcher<GameEntity> AcceptableRange {
        get {
            if (_matcherAcceptableRange == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AcceptableRange);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAcceptableRange = matcher;
            }

            return _matcherAcceptableRange;
        }
    }
}
