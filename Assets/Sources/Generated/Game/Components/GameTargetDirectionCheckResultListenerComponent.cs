//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetDirectionCheckResultListenerComponent targetDirectionCheckResultListener { get { return (TargetDirectionCheckResultListenerComponent)GetComponent(GameComponentsLookup.TargetDirectionCheckResultListener); } }
    public bool hasTargetDirectionCheckResultListener { get { return HasComponent(GameComponentsLookup.TargetDirectionCheckResultListener); } }

    public void AddTargetDirectionCheckResultListener(System.Collections.Generic.List<ITargetDirectionCheckResultListener> newValue) {
        var index = GameComponentsLookup.TargetDirectionCheckResultListener;
        var component = CreateComponent<TargetDirectionCheckResultListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTargetDirectionCheckResultListener(System.Collections.Generic.List<ITargetDirectionCheckResultListener> newValue) {
        var index = GameComponentsLookup.TargetDirectionCheckResultListener;
        var component = CreateComponent<TargetDirectionCheckResultListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetDirectionCheckResultListener() {
        RemoveComponent(GameComponentsLookup.TargetDirectionCheckResultListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetDirectionCheckResultListener;

    public static Entitas.IMatcher<GameEntity> TargetDirectionCheckResultListener {
        get {
            if (_matcherTargetDirectionCheckResultListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetDirectionCheckResultListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetDirectionCheckResultListener = matcher;
            }

            return _matcherTargetDirectionCheckResultListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTargetDirectionCheckResultListener(ITargetDirectionCheckResultListener value) {
        var listeners = hasTargetDirectionCheckResultListener
            ? targetDirectionCheckResultListener.value
            : new System.Collections.Generic.List<ITargetDirectionCheckResultListener>();
        listeners.Add(value);
        ReplaceTargetDirectionCheckResultListener(listeners);
    }

    public void RemoveTargetDirectionCheckResultListener(ITargetDirectionCheckResultListener value, bool removeComponentWhenEmpty = true) {
        var listeners = targetDirectionCheckResultListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTargetDirectionCheckResultListener();
        } else {
            ReplaceTargetDirectionCheckResultListener(listeners);
        }
    }
}
