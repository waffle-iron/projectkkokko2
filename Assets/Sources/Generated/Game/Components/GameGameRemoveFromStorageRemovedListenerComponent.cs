//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameRemoveFromStorageRemovedListenerComponent gameRemoveFromStorageRemovedListener { get { return (GameRemoveFromStorageRemovedListenerComponent)GetComponent(GameComponentsLookup.GameRemoveFromStorageRemovedListener); } }
    public bool hasGameRemoveFromStorageRemovedListener { get { return HasComponent(GameComponentsLookup.GameRemoveFromStorageRemovedListener); } }

    public void AddGameRemoveFromStorageRemovedListener(System.Collections.Generic.List<IGameRemoveFromStorageRemovedListener> newValue) {
        var index = GameComponentsLookup.GameRemoveFromStorageRemovedListener;
        var component = CreateComponent<GameRemoveFromStorageRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameRemoveFromStorageRemovedListener(System.Collections.Generic.List<IGameRemoveFromStorageRemovedListener> newValue) {
        var index = GameComponentsLookup.GameRemoveFromStorageRemovedListener;
        var component = CreateComponent<GameRemoveFromStorageRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameRemoveFromStorageRemovedListener() {
        RemoveComponent(GameComponentsLookup.GameRemoveFromStorageRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameRemoveFromStorageRemovedListener;

    public static Entitas.IMatcher<GameEntity> GameRemoveFromStorageRemovedListener {
        get {
            if (_matcherGameRemoveFromStorageRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameRemoveFromStorageRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameRemoveFromStorageRemovedListener = matcher;
            }

            return _matcherGameRemoveFromStorageRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameRemoveFromStorageRemovedListener(IGameRemoveFromStorageRemovedListener value) {
        var listeners = hasGameRemoveFromStorageRemovedListener
            ? gameRemoveFromStorageRemovedListener.value
            : new System.Collections.Generic.List<IGameRemoveFromStorageRemovedListener>();
        listeners.Add(value);
        ReplaceGameRemoveFromStorageRemovedListener(listeners);
    }

    public void RemoveGameRemoveFromStorageRemovedListener(IGameRemoveFromStorageRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameRemoveFromStorageRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameRemoveFromStorageRemovedListener();
        } else {
            ReplaceGameRemoveFromStorageRemovedListener(listeners);
        }
    }
}
