//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PoopComponent poop { get { return (PoopComponent)GetComponent(GameComponentsLookup.Poop); } }
    public bool hasPoop { get { return HasComponent(GameComponentsLookup.Poop); } }

    public void AddPoop(DurationType newAdd) {
        var index = GameComponentsLookup.Poop;
        var component = CreateComponent<PoopComponent>(index);
        component.add = newAdd;
        AddComponent(index, component);
    }

    public void ReplacePoop(DurationType newAdd) {
        var index = GameComponentsLookup.Poop;
        var component = CreateComponent<PoopComponent>(index);
        component.add = newAdd;
        ReplaceComponent(index, component);
    }

    public void RemovePoop() {
        RemoveComponent(GameComponentsLookup.Poop);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPoop;

    public static Entitas.IMatcher<GameEntity> Poop {
        get {
            if (_matcherPoop == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Poop);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPoop = matcher;
            }

            return _matcherPoop;
        }
    }
}
