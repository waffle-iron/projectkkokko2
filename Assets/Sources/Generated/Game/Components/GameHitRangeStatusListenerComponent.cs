//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HitRangeStatusListenerComponent hitRangeStatusListener { get { return (HitRangeStatusListenerComponent)GetComponent(GameComponentsLookup.HitRangeStatusListener); } }
    public bool hasHitRangeStatusListener { get { return HasComponent(GameComponentsLookup.HitRangeStatusListener); } }

    public void AddHitRangeStatusListener(System.Collections.Generic.List<IHitRangeStatusListener> newValue) {
        var index = GameComponentsLookup.HitRangeStatusListener;
        var component = CreateComponent<HitRangeStatusListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHitRangeStatusListener(System.Collections.Generic.List<IHitRangeStatusListener> newValue) {
        var index = GameComponentsLookup.HitRangeStatusListener;
        var component = CreateComponent<HitRangeStatusListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHitRangeStatusListener() {
        RemoveComponent(GameComponentsLookup.HitRangeStatusListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHitRangeStatusListener;

    public static Entitas.IMatcher<GameEntity> HitRangeStatusListener {
        get {
            if (_matcherHitRangeStatusListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HitRangeStatusListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHitRangeStatusListener = matcher;
            }

            return _matcherHitRangeStatusListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddHitRangeStatusListener(IHitRangeStatusListener value) {
        var listeners = hasHitRangeStatusListener
            ? hitRangeStatusListener.value
            : new System.Collections.Generic.List<IHitRangeStatusListener>();
        listeners.Add(value);
        ReplaceHitRangeStatusListener(listeners);
    }

    public void RemoveHitRangeStatusListener(IHitRangeStatusListener value, bool removeComponentWhenEmpty = true) {
        var listeners = hitRangeStatusListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveHitRangeStatusListener();
        } else {
            ReplaceHitRangeStatusListener(listeners);
        }
    }
}
