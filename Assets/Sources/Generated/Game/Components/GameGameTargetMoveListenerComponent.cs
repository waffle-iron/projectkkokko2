//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameTargetMoveListenerComponent gameTargetMoveListener { get { return (GameTargetMoveListenerComponent)GetComponent(GameComponentsLookup.GameTargetMoveListener); } }
    public bool hasGameTargetMoveListener { get { return HasComponent(GameComponentsLookup.GameTargetMoveListener); } }

    public void AddGameTargetMoveListener(System.Collections.Generic.List<IGameTargetMoveListener> newValue) {
        var index = GameComponentsLookup.GameTargetMoveListener;
        var component = CreateComponent<GameTargetMoveListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameTargetMoveListener(System.Collections.Generic.List<IGameTargetMoveListener> newValue) {
        var index = GameComponentsLookup.GameTargetMoveListener;
        var component = CreateComponent<GameTargetMoveListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTargetMoveListener() {
        RemoveComponent(GameComponentsLookup.GameTargetMoveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTargetMoveListener;

    public static Entitas.IMatcher<GameEntity> GameTargetMoveListener {
        get {
            if (_matcherGameTargetMoveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTargetMoveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTargetMoveListener = matcher;
            }

            return _matcherGameTargetMoveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameTargetMoveListener(IGameTargetMoveListener value) {
        var listeners = hasGameTargetMoveListener
            ? gameTargetMoveListener.value
            : new System.Collections.Generic.List<IGameTargetMoveListener>();
        listeners.Add(value);
        ReplaceGameTargetMoveListener(listeners);
    }

    public void RemoveGameTargetMoveListener(IGameTargetMoveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameTargetMoveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameTargetMoveListener();
        } else {
            ReplaceGameTargetMoveListener(listeners);
        }
    }
}
