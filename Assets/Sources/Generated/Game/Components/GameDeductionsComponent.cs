//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DeductionsComponent deductions { get { return (DeductionsComponent)GetComponent(GameComponentsLookup.Deductions); } }
    public bool hasDeductions { get { return HasComponent(GameComponentsLookup.Deductions); } }

    public void AddDeductions(uint newCount) {
        var index = GameComponentsLookup.Deductions;
        var component = CreateComponent<DeductionsComponent>(index);
        component.count = newCount;
        AddComponent(index, component);
    }

    public void ReplaceDeductions(uint newCount) {
        var index = GameComponentsLookup.Deductions;
        var component = CreateComponent<DeductionsComponent>(index);
        component.count = newCount;
        ReplaceComponent(index, component);
    }

    public void RemoveDeductions() {
        RemoveComponent(GameComponentsLookup.Deductions);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDeductions;

    public static Entitas.IMatcher<GameEntity> Deductions {
        get {
            if (_matcherDeductions == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Deductions);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDeductions = matcher;
            }

            return _matcherDeductions;
        }
    }
}
