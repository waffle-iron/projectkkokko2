//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AssignedToGridListenerComponent assignedToGridListener { get { return (AssignedToGridListenerComponent)GetComponent(GameComponentsLookup.AssignedToGridListener); } }
    public bool hasAssignedToGridListener { get { return HasComponent(GameComponentsLookup.AssignedToGridListener); } }

    public void AddAssignedToGridListener(System.Collections.Generic.List<IAssignedToGridListener> newValue) {
        var index = GameComponentsLookup.AssignedToGridListener;
        var component = CreateComponent<AssignedToGridListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAssignedToGridListener(System.Collections.Generic.List<IAssignedToGridListener> newValue) {
        var index = GameComponentsLookup.AssignedToGridListener;
        var component = CreateComponent<AssignedToGridListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAssignedToGridListener() {
        RemoveComponent(GameComponentsLookup.AssignedToGridListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAssignedToGridListener;

    public static Entitas.IMatcher<GameEntity> AssignedToGridListener {
        get {
            if (_matcherAssignedToGridListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AssignedToGridListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAssignedToGridListener = matcher;
            }

            return _matcherAssignedToGridListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAssignedToGridListener(IAssignedToGridListener value) {
        var listeners = hasAssignedToGridListener
            ? assignedToGridListener.value
            : new System.Collections.Generic.List<IAssignedToGridListener>();
        listeners.Add(value);
        ReplaceAssignedToGridListener(listeners);
    }

    public void RemoveAssignedToGridListener(IAssignedToGridListener value, bool removeComponentWhenEmpty = true) {
        var listeners = assignedToGridListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAssignedToGridListener();
        } else {
            ReplaceAssignedToGridListener(listeners);
        }
    }
}
