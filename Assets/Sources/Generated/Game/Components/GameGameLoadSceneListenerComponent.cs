//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameLoadSceneListenerComponent gameLoadSceneListener { get { return (GameLoadSceneListenerComponent)GetComponent(GameComponentsLookup.GameLoadSceneListener); } }
    public bool hasGameLoadSceneListener { get { return HasComponent(GameComponentsLookup.GameLoadSceneListener); } }

    public void AddGameLoadSceneListener(System.Collections.Generic.List<IGameLoadSceneListener> newValue) {
        var index = GameComponentsLookup.GameLoadSceneListener;
        var component = CreateComponent<GameLoadSceneListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameLoadSceneListener(System.Collections.Generic.List<IGameLoadSceneListener> newValue) {
        var index = GameComponentsLookup.GameLoadSceneListener;
        var component = CreateComponent<GameLoadSceneListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameLoadSceneListener() {
        RemoveComponent(GameComponentsLookup.GameLoadSceneListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameLoadSceneListener;

    public static Entitas.IMatcher<GameEntity> GameLoadSceneListener {
        get {
            if (_matcherGameLoadSceneListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameLoadSceneListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameLoadSceneListener = matcher;
            }

            return _matcherGameLoadSceneListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddGameLoadSceneListener(IGameLoadSceneListener value) {
        var listeners = hasGameLoadSceneListener
            ? gameLoadSceneListener.value
            : new System.Collections.Generic.List<IGameLoadSceneListener>();
        listeners.Add(value);
        ReplaceGameLoadSceneListener(listeners);
    }

    public void RemoveGameLoadSceneListener(IGameLoadSceneListener value, bool removeComponentWhenEmpty = true) {
        var listeners = gameLoadSceneListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveGameLoadSceneListener();
        } else {
            ReplaceGameLoadSceneListener(listeners);
        }
    }
}
